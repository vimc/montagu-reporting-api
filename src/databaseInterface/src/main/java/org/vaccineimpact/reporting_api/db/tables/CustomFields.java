/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.reporting_api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.reporting_api.db.DefaultSchema;
import org.vaccineimpact.reporting_api.db.Keys;
import org.vaccineimpact.reporting_api.db.tables.records.CustomFieldsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomFields extends TableImpl<CustomFieldsRecord> {

    private static final long serialVersionUID = -1807494148;

    /**
     * The reference instance of <code>custom_fields</code>
     */
    public static final CustomFields CUSTOM_FIELDS = new CustomFields();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomFieldsRecord> getRecordType() {
        return CustomFieldsRecord.class;
    }

    /**
     * The column <code>custom_fields.id</code>.
     */
    public final TableField<CustomFieldsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>custom_fields.description</code>.
     */
    public final TableField<CustomFieldsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>custom_fields</code> table reference
     */
    public CustomFields() {
        this("custom_fields", null);
    }

    /**
     * Create an aliased <code>custom_fields</code> table reference
     */
    public CustomFields(String alias) {
        this(alias, CUSTOM_FIELDS);
    }

    private CustomFields(String alias, Table<CustomFieldsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomFields(String alias, Table<CustomFieldsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomFieldsRecord> getPrimaryKey() {
        return Keys.PK_CUSTOM_FIELDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomFieldsRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomFieldsRecord>>asList(Keys.PK_CUSTOM_FIELDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomFields as(String alias) {
        return new CustomFields(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomFields rename(String name) {
        return new CustomFields(name, null);
    }
}
